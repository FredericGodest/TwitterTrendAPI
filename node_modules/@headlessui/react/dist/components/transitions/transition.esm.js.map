{"version":3,"file":"transition.esm.js","sources":["../../../src/components/transitions/transition.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  entered?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    entered,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let initial = useIsInitialRender()\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let enteredClasses = useSplitClasses(entered)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  let ready = useServerHandoffComplete()\n\n  useEffect(() => {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state, ready])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      <OpenClosedProvider\n        value={match(state, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })}\n      >\n        {render({\n          props: { ...passthroughProps, ...propsWeControl },\n          defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition.Child',\n        })}\n      </OpenClosedProvider>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show?: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  let usesOpenClosedState = useOpenClosed()\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    show = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  if (![true, false].includes((show as unknown) as boolean)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show: show as boolean, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = function Child<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let hasTransitionContext = useContext(TransitionContext) !== null\n  let hasOpenClosedContext = useOpenClosed() !== null\n\n  return !hasTransitionContext && hasOpenClosedContext ? (\n    <Transition {...props} />\n  ) : (\n    <TransitionChild {...props} />\n  )\n}\nTransition.Root = Transition\n"],"names":["useSplitClasses","classes","useMemo","split","filter","className","trim","length","TransitionContext","createContext","displayName","TreeStates","useTransitionContext","context","useContext","Error","useParentNesting","NestingContext","hasChildren","bag","children","current","state","Visible","useNesting","done","doneRef","useRef","transitionableChildren","mounted","useIsMounted","useEffect","unregister","useCallback","childId","strategy","RenderStrategy","Hidden","idx","findIndex","id","match","Unmount","splice","register","child","find","push","noop","eventNames","ensureEventHooksExist","events","result","name","useEvents","eventsRef","DEFAULT_TRANSITION_CHILD_TAG","TransitionChildRenderFeatures","Features","TransitionChild","props","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","entered","leave","leaveFrom","leaveTo","rest","container","useState","setState","unmount","show","appear","initial","useIsInitialRender","useId","isTransitioning","nesting","useIsoMorphicEffect","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","ready","useServerHandoffComplete","skip","node","transition","reason","Reason","Finished","propsWeControl","ref","passthroughProps","React","Provider","value","OpenClosedProvider","State","Open","Closed","render","defaultTag","features","visible","Transition","usesOpenClosedState","useOpenClosed","undefined","includes","nestingBag","transitionBag","sharedProps","as","Fragment","Child","hasTransitionContext","hasOpenClosedContext","Root"],"mappings":"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"}