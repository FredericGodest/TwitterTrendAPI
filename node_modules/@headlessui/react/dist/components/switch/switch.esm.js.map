{"version":3,"file":"switch.esm.js","sources":["../../../src/components/switch/switch.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  setSwitch(element: HTMLButtonElement): void\n  labelledby: string | undefined\n  describedby: string | undefined\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let context = useMemo<StateDefinition>(\n    () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),\n    [switchElement, setSwitchElement, labelledby, describedby]\n  )\n\n  return (\n    <DescriptionProvider name=\"Switch.Description\">\n      <LabelProvider\n        name=\"Switch.Label\"\n        props={{\n          onClick() {\n            if (!switchElement) return\n            switchElement.click()\n            switchElement.focus({ preventScroll: true })\n          },\n        }}\n      >\n        <GroupContext.Provider value={context}>\n          {render({ props, defaultTag: DEFAULT_GROUP_TAG, name: 'Switch.Group' })}\n        </GroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'aria-labelledby'\n  | 'aria-describedby'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl | 'checked' | 'onChange'> & {\n    checked: boolean\n    onChange(checked: boolean): void\n  }\n) {\n  let { checked, onChange, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let slot = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.labelledby,\n    'aria-describedby': groupContext?.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, { type: 'button' })\n  }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch',\n  })\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\nSwitch.Description = Description\n"],"names":["GroupContext","createContext","displayName","DEFAULT_GROUP_TAG","Fragment","Group","props","useState","switchElement","setSwitchElement","useLabels","labelledby","LabelProvider","useDescriptions","describedby","DescriptionProvider","context","useMemo","setSwitch","React","name","onClick","click","focus","preventScroll","Provider","value","render","defaultTag","DEFAULT_SWITCH_TAG","Switch","checked","onChange","passThroughProps","id","useId","groupContext","useContext","toggle","useCallback","handleClick","event","isDisabledReactIssue7711","currentTarget","preventDefault","handleKeyUp","key","Keys","Tab","Space","handleKeyPress","slot","propsWeControl","ref","undefined","role","tabIndex","onKeyUp","onKeyPress","as","Object","assign","type","Label","Description"],"mappings":";;;;;;;;;AA6BA,IAAIA,YAAY,gBAAGC,aAAa,CAAyB,IAAzB,CAAhC;AACAD,YAAY,CAACE,WAAb,GAA2B,cAA3B;;AAIA,IAAIC,iBAAiB,GAAGC,QAAxB;;AAEA,SAASC,KAAT,CAAoEC,KAApE;kBAC0CC,QAAQ,CAA2B,IAA3B;MAA3CC;MAAeC;;mBACcC,SAAS;MAAtCC;MAAYC;;yBACwBC,eAAe;MAAnDC;MAAaC;;AAElB,MAAIC,OAAO,GAAGC,OAAO,CACnB;AAAA,WAAO;AAAE,gBAAQT,aAAV;AAAyBU,MAAAA,SAAS,EAAET,gBAApC;AAAsDE,MAAAA,UAAU,EAAVA,UAAtD;AAAkEG,MAAAA,WAAW,EAAXA;AAAlE,KAAP;AAAA,GADmB,EAEnB,CAACN,aAAD,EAAgBC,gBAAhB,EAAkCE,UAAlC,EAA8CG,WAA9C,CAFmB,CAArB;AAKA,SACEK,mBAAA,CAACJ,mBAAD;AAAqBK,IAAAA,IAAI,EAAC;GAA1B,EACED,mBAAA,CAACP,aAAD;AACEQ,IAAAA,IAAI,EAAC;AACLd,IAAAA,KAAK,EAAE;AACLe,MAAAA,OADK;AAEH,YAAI,CAACb,aAAL,EAAoB;AACpBA,QAAAA,aAAa,CAACc,KAAd;AACAd,QAAAA,aAAa,CAACe,KAAd,CAAoB;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAApB;AACD;AALI;GAFT,EAUEL,mBAAA,CAACnB,YAAY,CAACyB,QAAd;AAAuBC,IAAAA,KAAK,EAAEV;GAA9B,EACGW,MAAM,CAAC;AAAErB,IAAAA,KAAK,EAALA,KAAF;AAASsB,IAAAA,UAAU,EAAEzB,iBAArB;AAAwCiB,IAAAA,IAAI,EAAE;AAA9C,GAAD,CADT,CAVF,CADF,CADF;AAkBD;;;AAID,IAAIS,kBAAkB,GAAG,QAAzB;SAegBC,OACdxB;MAKMyB,UAA2CzB,MAA3CyB;MAASC,WAAkC1B,MAAlC0B;MAAaC,iDAAqB3B;;AACjD,MAAI4B,EAAE,0BAAwBC,KAAK,EAAnC;AACA,MAAIC,YAAY,GAAGC,UAAU,CAACrC,YAAD,CAA7B;AAEA,MAAIsC,MAAM,GAAGC,WAAW,CAAC;AAAA,WAAMP,QAAQ,CAAC,CAACD,OAAF,CAAd;AAAA,GAAD,EAA2B,CAACC,QAAD,EAAWD,OAAX,CAA3B,CAAxB;AACA,MAAIS,WAAW,GAAGD,WAAW,CAC3B,UAACE,KAAD;AACE,QAAIC,wBAAwB,CAACD,KAAK,CAACE,aAAP,CAA5B,EAAmD,OAAOF,KAAK,CAACG,cAAN,EAAP;AACnDH,IAAAA,KAAK,CAACG,cAAN;AACAN,IAAAA,MAAM;AACP,GAL0B,EAM3B,CAACA,MAAD,CAN2B,CAA7B;AAQA,MAAIO,WAAW,GAAGN,WAAW,CAC3B,UAACE,KAAD;AACE,QAAIA,KAAK,CAACK,GAAN,KAAcC,IAAI,CAACC,GAAvB,EAA4BP,KAAK,CAACG,cAAN;AAC5B,QAAIH,KAAK,CAACK,GAAN,KAAcC,IAAI,CAACE,KAAvB,EAA8BX,MAAM;AACrC,GAJ0B,EAK3B,CAACA,MAAD,CAL2B,CAA7B;;AASA,MAAIY,cAAc,GAAGX,WAAW,CAC9B,UAACE,KAAD;AAAA,WAA4CA,KAAK,CAACG,cAAN,EAA5C;AAAA,GAD8B,EAE9B,EAF8B,CAAhC;AAKA,MAAIO,IAAI,GAAGlC,OAAO,CAAsB;AAAA,WAAO;AAAEc,MAAAA,OAAO,EAAPA;AAAF,KAAP;AAAA,GAAtB,EAA2C,CAACA,OAAD,CAA3C,CAAlB;AACA,MAAIqB,cAAc,GAAG;AACnBlB,IAAAA,EAAE,EAAFA,EADmB;AAEnBmB,IAAAA,GAAG,EAAEjB,YAAY,KAAK,IAAjB,GAAwBkB,SAAxB,GAAoClB,YAAY,CAAClB,SAFnC;AAGnBqC,IAAAA,IAAI,EAAE,QAHa;AAInBC,IAAAA,QAAQ,EAAE,CAJS;AAKnB,oBAAgBzB,OALG;AAMnB,uBAAmBK,YAAnB,oBAAmBA,YAAY,CAAEzB,UANd;AAOnB,wBAAoByB,YAApB,oBAAoBA,YAAY,CAAEtB,WAPf;AAQnBO,IAAAA,OAAO,EAAEmB,WARU;AASnBiB,IAAAA,OAAO,EAAEZ,WATU;AAUnBa,IAAAA,UAAU,EAAER;AAVO,GAArB;;AAaA,MAAIjB,gBAAgB,CAAC0B,EAAjB,KAAwB,QAA5B,EAAsC;AACpCC,IAAAA,MAAM,CAACC,MAAP,CAAcT,cAAd,EAA8B;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAA9B;AACD;;AAED,SAAOnC,MAAM,CAAC;AACZrB,IAAAA,KAAK,eAAO2B,gBAAP,EAA4BmB,cAA5B,CADO;AAEZD,IAAAA,IAAI,EAAJA,IAFY;AAGZvB,IAAAA,UAAU,EAAEC,kBAHA;AAIZT,IAAAA,IAAI,EAAE;AAJM,GAAD,CAAb;AAMD;;AAIDU,MAAM,CAACzB,KAAP,GAAeA,KAAf;AACAyB,MAAM,CAACiC,KAAP,GAAeA,KAAf;AACAjC,MAAM,CAACkC,WAAP,GAAqBA,WAArB;;;;"}