{"version":3,"file":"disclosure.esm.js","sources":["../../../src/components/disclosure/disclosure.tsx"],"sourcesContent":["// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  disclosureState: DisclosureStates\n\n  linkedPanel: boolean\n\n  buttonId: string\n  panelId: string\n}\n\nenum ActionTypes {\n  ToggleDisclosure,\n\n  SetButtonId,\n  SetPanelId,\n\n  LinkPanel,\n  UnlinkPanel,\n}\n\ntype Actions =\n  | { type: ActionTypes.ToggleDisclosure }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n  | { type: ActionTypes.LinkPanel }\n  | { type: ActionTypes.UnlinkPanel }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.ToggleDisclosure]: state => ({\n    ...state,\n    disclosureState: match(state.disclosureState, {\n      [DisclosureStates.Open]: DisclosureStates.Closed,\n      [DisclosureStates.Closed]: DisclosureStates.Open,\n    }),\n  }),\n  [ActionTypes.LinkPanel](state) {\n    if (state.linkedPanel === true) return state\n    return { ...state, linkedPanel: true }\n  },\n  [ActionTypes.UnlinkPanel](state) {\n    if (state.linkedPanel === false) return state\n    return { ...state, linkedPanel: false }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet DisclosureContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nDisclosureContext.displayName = 'DisclosureContext'\n\nfunction useDisclosureContext(component: string) {\n  let context = useContext(DisclosureContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Disclosure.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DISCLOSURE_TAG = Fragment\ninterface DisclosureRenderPropArg {\n  open: boolean\n}\n\nexport function Disclosure<TTag extends ElementType = typeof DEFAULT_DISCLOSURE_TAG>(\n  props: Props<TTag, DisclosureRenderPropArg> & {\n    defaultOpen?: boolean\n  }\n) {\n  let { defaultOpen = false, ...passthroughProps } = props\n  let buttonId = `headlessui-disclosure-button-${useId()}`\n  let panelId = `headlessui-disclosure-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    disclosureState: defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed,\n    linkedPanel: false,\n    buttonId,\n    panelId,\n  } as StateDefinition)\n  let [{ disclosureState }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let slot = useMemo<DisclosureRenderPropArg>(\n    () => ({ open: disclosureState === DisclosureStates.Open }),\n    [disclosureState]\n  )\n\n  return (\n    <DisclosureContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(disclosureState, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })}\n      >\n        {render({\n          props: passthroughProps,\n          slot,\n          defaultTag: DEFAULT_DISCLOSURE_TAG,\n          name: 'Disclosure',\n        })}\n      </OpenClosedProvider>\n    </DisclosureContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(ref)\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        case Keys.Space:\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.ToggleDisclosure })\n          break\n      }\n    },\n    [dispatch]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      dispatch({ type: ActionTypes.ToggleDisclosure })\n    },\n    [dispatch, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id: state.buttonId,\n    type: 'button',\n    'aria-expanded': props.disabled ? undefined : state.disclosureState === DisclosureStates.Open,\n    'aria-controls': state.linkedPanel ? state.panelId : undefined,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Disclosure.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n}\ntype PanelPropsWeControl = 'id'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useDisclosureContext([Disclosure.name, Panel.name].join('.'))\n  let panelRef = useSyncRefs(ref, () => {\n    if (state.linkedPanel) return\n    dispatch({ type: ActionTypes.LinkPanel })\n  })\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.disclosureState === DisclosureStates.Open\n  })()\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.UnlinkPanel }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (state.disclosureState === DisclosureStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.UnlinkPanel })\n    }\n  }, [state.disclosureState, props.unmount, dispatch])\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.disclosureState === DisclosureStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible,\n    name: 'Disclosure.Panel',\n  })\n})\n\n// ---\n\nDisclosure.Button = Button\nDisclosure.Panel = Panel\n"],"names":["DisclosureStates","ActionTypes","reducers","ToggleDisclosure","state","disclosureState","match","Open","Closed","LinkPanel","linkedPanel","UnlinkPanel","SetButtonId","action","buttonId","SetPanelId","panelId","DisclosureContext","createContext","displayName","useDisclosureContext","component","context","useContext","err","Error","Disclosure","name","captureStackTrace","stateReducer","type","DEFAULT_DISCLOSURE_TAG","Fragment","props","defaultOpen","passthroughProps","useId","reducerBag","useReducer","dispatch","useEffect","slot","useMemo","open","React","Provider","value","OpenClosedProvider","State","render","defaultTag","DEFAULT_BUTTON_TAG","Button","forwardRefWithAs","ref","join","buttonRef","useSyncRefs","handleKeyDown","useCallback","event","key","Keys","Space","Enter","preventDefault","stopPropagation","handleKeyUp","handleClick","isDisabledReactIssue7711","currentTarget","disabled","propsWeControl","id","undefined","onKeyDown","onKeyUp","onClick","DEFAULT_PANEL_TAG","PanelRenderFeatures","Features","RenderStrategy","Static","Panel","panelRef","usesOpenClosedState","useOpenClosed","visible","unmount","features"],"mappings":"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"}